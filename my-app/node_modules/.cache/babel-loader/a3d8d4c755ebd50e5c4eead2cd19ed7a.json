{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useHackerNewsAPI() {\n  _s();\n\n  const [hits, setHits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleFetchData = useRef({});\n  const [url, setUrl] = useState(`https://hn.algolia.com/api/v1/search?query=`);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  handleFetchData.current = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(url);\n      console.log(response);\n\n      if (isMounted.current) {\n        var _response$data;\n\n        setHits(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.hits) || []); // Optional chaining\n\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      setErrorMessage(`The error was happeing ${error}`);\n    }\n  };\n\n  useEffect(() => {\n    handleFetchData.current();\n  }, [url]);\n  return {\n    setUrl,\n    loading,\n    errorMessage,\n    hits\n  };\n}\n\n_s(useHackerNewsAPI, \"AqObqMsn1VDeH3yZWXcsR/OroyM=\");","map":{"version":3,"names":["axios","useEffect","useRef","useState","useHackerNewsAPI","hits","setHits","loading","setLoading","errorMessage","setErrorMessage","handleFetchData","url","setUrl","isMounted","current","response","get","console","log","data","error"],"sources":["E:/KTCity/ReactJsCourse_KTCity/my-app/src/hooks/useHackerNewsAPI.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useHackerNewsAPI() {\r\n  const [hits, setHits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const handleFetchData = useRef({});\r\n  const [url, setUrl] = useState(`https://hn.algolia.com/api/v1/search?query=`);\r\n  const isMounted = useRef(true);\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  });\r\n\r\n  handleFetchData.current = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(url);\r\n      console.log(response);\r\n      if (isMounted.current) {\r\n        setHits(response.data?.hits || []); // Optional chaining\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setErrorMessage(`The error was happeing ${error}`);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleFetchData.current();\r\n  }, [url]);\r\n\r\n  return {\r\n    setUrl,\r\n    loading,\r\n    errorMessage,\r\n    hits,\r\n  };\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,gBAAT,GAA4B;EAAA;;EACzC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAMQ,eAAe,GAAGT,MAAM,CAAC,EAAD,CAA9B;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAE,6CAAF,CAA9B;EACA,MAAMW,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;EACAD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXa,SAAS,CAACC,OAAV,GAAoB,KAApB;IACD,CAFD;EAGD,CAJQ,CAAT;;EAMAJ,eAAe,CAACI,OAAhB,GAA0B,YAAY;IACpCP,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUL,GAAV,CAAvB;MACAM,OAAO,CAACC,GAAR,CAAYH,QAAZ;;MACA,IAAIF,SAAS,CAACC,OAAd,EAAuB;QAAA;;QACrBT,OAAO,CAAC,mBAAAU,QAAQ,CAACI,IAAT,kEAAef,IAAf,KAAuB,EAAxB,CAAP,CADqB,CACe;;QACpCG,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAPD,CAOE,OAAOa,KAAP,EAAc;MACdb,UAAU,CAAC,KAAD,CAAV;MACAE,eAAe,CAAE,0BAAyBW,KAAM,EAAjC,CAAf;IACD;EACF,CAbD;;EAcApB,SAAS,CAAC,MAAM;IACdU,eAAe,CAACI,OAAhB;EACD,CAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;EAIA,OAAO;IACLC,MADK;IAELN,OAFK;IAGLE,YAHK;IAILJ;EAJK,CAAP;AAMD;;GArCuBD,gB"},"metadata":{},"sourceType":"module"}