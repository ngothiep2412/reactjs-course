{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\ReactJsCourse_KTCity\\\\my-app\\\\src\\\\App.js\";\n// import logo from \"./logo.svg\";\n// import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.scss\";\nimport TextArea from \"./components/TextArea\";\nimport myself from \"./components/TextArea\"; // import Input from \"./components/Input\";\n// import TextAreaAutoResize from \"./components/TextAreaAutoResize\";\n// import StopWatch from \"./components/StopWatch\";\n// import HackerNews from \"./components/news/HackerNews\";\n// import HackerNewsWithReducer from \"./components/news/HackerNews copyWithReducer\";\n// import Card from \"./components/card/Card\";\n// import Card2 from \"./components/card/Card2\";\n// import CardList from \"./components/card/CardList\";\n// import CardTailwind from \"./components/card/CardTailwind\";\n// import Photos from \"./components/photo/Photos\";\n// import { GlobalStyles } from \"./GlobalStyles\";\n// import { ThemeProvider } from \"styled-components\";\n// const theme = {\n//   colors: {\n//     blue: \"#ff6bcb\",\n//   },\n//   orange: \"#ffa400\",\n// };\n// import Button from \"./components/button/Button\";\n// import Toggle from \"./components/toggle/Toggle\";\n// import Counter from \"./components/counter/Counter\";\n// import Header from \"./components/Header\";\n// import Timer from \"./components/Timer\";\n// import GameWithReducer from \"./components/tictactoe/GameWithReducer\";\n// import DoubleCounter from \"./components/counter/DoubleCounter\";\n// import YoutubeList from \"./components/youtube/YoutubeList\";\n// JSX: Javascript XML\n// JS6\n// Babel\n\n/**\n * element = <div id=\"root\">Hello world</div>: JSX\n * element = React.createElement('div', {id: 'root'}, 'Hello world')\n * function createElement(elementType, props, ...children)\n * elementType: 'div' 'p' 'span'\n * props: class (Trong react là className), id, src, alt\n * ...children (phần tử con):\n */\n// curly bases {}\n// Parent component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // // const inputRef, abcRef = React.useRef(initialValue);\n  // const countRef = React.useRef(0);\n  // const handler = () => {\n  //   // truy xuất giá trị của ref\n  //   console.log(countRef.current);\n  //   // update giá trị của ref\n  //   countRef.current = 10; // State thay đổi thì component re-render lại còn ref thì không\n  // };\n  // const countRef = React.useRef(0);\n  // const [count, setCount] = React.useState(0);\n  // const handle = () => {\n  //   const updateCount = countRef.current + 1;\n  //   console.log(`CLicked ${updateCount} times`);\n  //   countRef.current++;\n  // };\n  // console.log(\"Render\");\n  // state là bất đồng bộ đợi component re-render lại r mới cập nhật và ref đồng bộ cập nhật ngay lập tức\n  // useEffect(() => {\n  //   const timer = setInterval();\n  //   return () => {\n  //     clearInterval(timer);\n  //   };\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(TextArea, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TextArea","myself","App"],"sources":["E:/KTCity/ReactJsCourse_KTCity/my-app/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.scss\";\nimport TextArea from \"./components/TextArea\";\nimport myself from \"./components/TextArea\";\n// import Input from \"./components/Input\";\n// import TextAreaAutoResize from \"./components/TextAreaAutoResize\";\n// import StopWatch from \"./components/StopWatch\";\n// import HackerNews from \"./components/news/HackerNews\";\n// import HackerNewsWithReducer from \"./components/news/HackerNews copyWithReducer\";\n// import Card from \"./components/card/Card\";\n// import Card2 from \"./components/card/Card2\";\n// import CardList from \"./components/card/CardList\";\n// import CardTailwind from \"./components/card/CardTailwind\";\n// import Photos from \"./components/photo/Photos\";\n// import { GlobalStyles } from \"./GlobalStyles\";\n// import { ThemeProvider } from \"styled-components\";\n\n// const theme = {\n//   colors: {\n//     blue: \"#ff6bcb\",\n//   },\n//   orange: \"#ffa400\",\n// };\n// import Button from \"./components/button/Button\";\n// import Toggle from \"./components/toggle/Toggle\";\n// import Counter from \"./components/counter/Counter\";\n// import Header from \"./components/Header\";\n// import Timer from \"./components/Timer\";\n// import GameWithReducer from \"./components/tictactoe/GameWithReducer\";\n// import DoubleCounter from \"./components/counter/DoubleCounter\";\n// import YoutubeList from \"./components/youtube/YoutubeList\";\n// JSX: Javascript XML\n// JS6\n// Babel\n/**\n * element = <div id=\"root\">Hello world</div>: JSX\n * element = React.createElement('div', {id: 'root'}, 'Hello world')\n * function createElement(elementType, props, ...children)\n * elementType: 'div' 'p' 'span'\n * props: class (Trong react là className), id, src, alt\n * ...children (phần tử con):\n */\n// curly bases {}\n\n// Parent component\nfunction App() {\n  // // const inputRef, abcRef = React.useRef(initialValue);\n  // const countRef = React.useRef(0);\n\n  // const handler = () => {\n  //   // truy xuất giá trị của ref\n  //   console.log(countRef.current);\n  //   // update giá trị của ref\n  //   countRef.current = 10; // State thay đổi thì component re-render lại còn ref thì không\n  // };\n  // const countRef = React.useRef(0);\n  // const [count, setCount] = React.useState(0);\n  // const handle = () => {\n  //   const updateCount = countRef.current + 1;\n  //   console.log(`CLicked ${updateCount} times`);\n  //   countRef.current++;\n  // };\n  // console.log(\"Render\");\n  // state là bất đồng bộ đợi component re-render lại r mới cập nhật và ref đồng bộ cập nhật ngay lập tức\n\n  // useEffect(() => {\n  //   const timer = setInterval();\n  //   return () => {\n  //     clearInterval(timer);\n  //   };\n  // }, []);\n  return <TextArea></TextArea>;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA,OAAO,YAAP;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,SAASC,GAAT,GAAe;EACb;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAO,QAAC,QAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KA3BQA,G;AA6BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}